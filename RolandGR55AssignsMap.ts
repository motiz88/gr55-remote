import { RolandGR55AddressMapAbsolute as GR55 } from "./RolandGR55AddressMap";
const patch = GR55.temporaryPatch;

// TODO: Dedupe the guitar and bass mode maps

export const RolandGR55PatchAssignsMapGuitarMode = {
  "PCM1 Tone Switch": patch.patchPCMTone1.muteSwitch,
  "PCM1 Tone Number": patch.patchPCMTone1.toneSelect,
  "PCM1 Tone Level": patch.patchPCMTone1.partLevel,
  "PCM1 Tone Octave": patch.patchPCMTone1.partOctaveShift,
  "PCM1 Tone Chromatic": patch.patchPCMTone1.chromatic,
  "PCM1 Tone Legato": patch.patchPCMTone1.legatoSwitch,
  "PCM1 Tone Lev Velo Sens":
    patch.patchPCMTone1Offset.tvaLevelVelocitySensOffset,
  "PCM1 Tone Velo Curve Type": patch.patchPCMTone1Offset.tvaLevelVelocityCurve,
  "PCM1 Tone Nuance Sw": patch.patchPCMTone1.nuanceSwitch,
  "PCM1 Tone Pan": patch.patchPCMTone1.partPan,
  "PCM1 Tone String Lev 1": patch.patchPCMTone1.string1Level,
  "PCM1 Tone String Lev 2": patch.patchPCMTone1.string2Level,
  "PCM1 Tone String Lev 3": patch.patchPCMTone1.string3Level,
  "PCM1 Tone String Lev 4": patch.patchPCMTone1.string4Level,
  "PCM1 Tone String Lev 5": patch.patchPCMTone1.string5Level,
  "PCM1 Tone String Lev 6": patch.patchPCMTone1.string6Level,
  "PCM1 Pitch Pitch shift": patch.patchPCMTone1.partCoarseTune,
  "PCM1 Pitch Pitch Fine": patch.patchPCMTone1.partFineTune,
  "PCM1 Pitch Portamento Sw": patch.patchPCMTone1.partPortamentoSwitch,
  "PCM1 Pitch Portamento Type": patch.patchPCMTone1Offset.partPortamentoType,
  "PCM1 Pitch Portamento Time": patch.patchPCMTone1.portamentoTime,
  "PCM1 Filter Filter Type": patch.patchPCMTone1Offset.tvfFilterType,
  "PCM1 Filter CutOff": patch.patchPCMTone1Offset.tvfCutoffFrequencyOffset,
  "PCM1 Filter Resonance": patch.patchPCMTone1Offset.tvfResonanceOffset,
  "PCM1 Filter Cutoff Velo Sens":
    patch.patchPCMTone1Offset.tvfCutoffVelocitySens,
  "PCM1 Filter Cutoff Nuance Sens": patch.patchPCMTone1Offset.nuanceCutoffSens,
  "PCM1 Filter Cutoff Velo Curve":
    patch.patchPCMTone1Offset.tvfCutoffVelocityCurve,
  "PCM1 Filter Cutoff Keyfollow":
    patch.patchPCMTone1Offset.tvfCutoffKeyfollowOffset,
  "PCM1 TVF TVF Env Depth": patch.patchPCMTone1Offset.tvfEnvDepthOffset,
  "PCM1 TVF TVF Attack Time": patch.patchPCMTone1Offset.tvfEnvTime1Offset,
  "PCM1 TVF TVF Decay Time": patch.patchPCMTone1Offset.tvfEnvTime2Offset,
  "PCM1 TVF TVF Sustain level": patch.patchPCMTone1Offset.tvfEnvLevel3Offset,
  "PCM1 TVF TVF Release Time": patch.patchPCMTone1Offset.tvfEnvTime4Offset,
  "PCM1 TVF TVF Attack Vel Sens":
    patch.patchPCMTone1Offset.tvfEnvTime1VelocitySensOffset,
  "PCM1 TVF TVF Attack Nuance Sens":
    patch.patchPCMTone1Offset.tvfEnvTime1NuanceSensOffset,
  "PCM1 TVA TVA Attack Time": patch.patchPCMTone1Offset.tvaEnvTime1Offset,
  "PCM1 TVA TVA Decay Time": patch.patchPCMTone1Offset.tvaEnvTime2Offset,
  "PCM1 TVA  TVA Sustain Level": patch.patchPCMTone1Offset.tvaEnvLevel3Offset,
  "PCM1 TVA  TVA Release Time": patch.patchPCMTone1Offset.tvaEnvTime4Offset,
  "PCM1 TVA TVA Attack Vel Sens":
    patch.patchPCMTone1Offset.tvaEnvTime1VelocitySensOffset,
  "PCM1 TVA TVA Attack Nuance Sens":
    patch.patchPCMTone1Offset.tvaEnvTime1NuanceSensOffset,
  "PCM1 TVA Level Nuance Sens": patch.patchPCMTone1Offset.nuanceLevelSens,
  "PCM1 TVA Release Mode": patch.patchPCMTone1.releaseMode,
  "PCM1 Pitch ENV Pitch Env Vel Sens":
    patch.patchPCMTone1Offset.pitchEnvVelocitySensOffset,
  "PCM1 Pitch ENV Pitch Env Depth": patch.patchPCMTone1Offset.pitchEnvOffset,
  "PCM1 Pitch ENV Attack Time": patch.patchPCMTone1Offset.pitchEnvTime1Offset,
  "PCM1 Pitch ENV Pitch Decay Time":
    patch.patchPCMTone1Offset.pitchEnvTime2Offset,
  "PCM1 LFO1 LFO1 Rate": patch.patchPCMTone1Offset.lfo1Rate,
  "PCM1 LFO1 LFO1 Pitch Depth": patch.patchPCMTone1Offset.lfo1PitchDepthOffset,
  "PCM1 LFO1 LFO1 TVF Depth": patch.patchPCMTone1Offset.lfo1TVFDepthOffset,
  "PCM1 LFO1 LFO1 TVA Depth": patch.patchPCMTone1Offset.lfo1TVADepthOffset,
  "PCM1 LFO1 LFO1 Pan Depth": patch.patchPCMTone1Offset.lfo1PanDepthOffset,
  "PCM1 LFO2 LFO2 Rate": patch.patchPCMTone1Offset.lfo2Rate,
  "PCM1 LFO2 LFO2 Pitch Depth": patch.patchPCMTone1Offset.lfo2PitchDepthOffset,
  "PCM1 LFO2 LFO2 TVF Depth": patch.patchPCMTone1Offset.lfo2TVFDepthOffset,
  "PCM1 LFO2 LFO2 TVA Depth": patch.patchPCMTone1Offset.lfo2TVADepthOffset,
  "PCM1 LFO2 LFO2 Pan Depth": patch.patchPCMTone1Offset.lfo2PanDepthOffset,
  "PCM1 Line Select": patch.patchPCMTone1.partOutputMFXSelect,
  // TODO: How to handle assign targets that aren't patch fields?
  // (Assuming that's what this is. Ask gumtown)
  "PCM1 Tone1 Bend": null,

  "PCM2 Tone Switch": patch.patchPCMTone2.muteSwitch,
  "PCM2 Tone Number": patch.patchPCMTone2.toneSelect,
  "PCM2 Tone Level": patch.patchPCMTone2.partLevel,
  "PCM2 Tone Octave": patch.patchPCMTone2.partOctaveShift,
  "PCM2 Tone Chromatic": patch.patchPCMTone2.chromatic,
  "PCM2 Tone Legato": patch.patchPCMTone2.legatoSwitch,
  "PCM2 Tone Lev Velo Sens":
    patch.patchPCMTone2Offset.tvaLevelVelocitySensOffset,
  "PCM2 Tone Velo Curve Type": patch.patchPCMTone2Offset.tvaLevelVelocityCurve,
  "PCM2 Tone Nuance Sw": patch.patchPCMTone2.nuanceSwitch,
  "PCM2 Tone Pan": patch.patchPCMTone2.partPan,
  "PCM2 Tone String Lev 1": patch.patchPCMTone2.string1Level,
  "PCM2 Tone String Lev 2": patch.patchPCMTone2.string2Level,
  "PCM2 Tone String Lev 3": patch.patchPCMTone2.string3Level,
  "PCM2 Tone String Lev 4": patch.patchPCMTone2.string4Level,
  "PCM2 Tone String Lev 5": patch.patchPCMTone2.string5Level,
  "PCM2 Tone String Lev 6": patch.patchPCMTone2.string6Level,
  "PCM2 Pitch Pitch shift": patch.patchPCMTone2.partCoarseTune,
  "PCM2 Pitch Pitch Fine": patch.patchPCMTone2.partFineTune,
  "PCM2 Pitch Portamento Sw": patch.patchPCMTone2.partPortamentoSwitch,
  "PCM2 Pitch Portamento Type": patch.patchPCMTone2Offset.partPortamentoType,
  "PCM2 Pitch Portamento Time": patch.patchPCMTone2.portamentoTime,
  "PCM2 Filter Filter Type": patch.patchPCMTone2Offset.tvfFilterType,
  "PCM2 Filter CutOff": patch.patchPCMTone2Offset.tvfCutoffFrequencyOffset,
  "PCM2 Filter Resonance": patch.patchPCMTone2Offset.tvfResonanceOffset,
  "PCM2 Filter Cutoff Velo Sens":
    patch.patchPCMTone2Offset.tvfCutoffVelocitySens,
  "PCM2 Filter Cutoff Nuance Sens": patch.patchPCMTone2Offset.nuanceCutoffSens,
  "PCM2 Filter Cutoff Velo Curve":
    patch.patchPCMTone2Offset.tvfCutoffVelocityCurve,
  "PCM2 Filter Cutoff Keyfollow":
    patch.patchPCMTone2Offset.tvfCutoffKeyfollowOffset,
  "PCM2 TVF TVF Env Depth": patch.patchPCMTone2Offset.tvfEnvDepthOffset,
  "PCM2 TVF TVF Attack Time": patch.patchPCMTone2Offset.tvfEnvTime1Offset,
  "PCM2 TVF TVF Decay Time": patch.patchPCMTone2Offset.tvfEnvTime2Offset,
  "PCM2 TVF TVF Sustain level": patch.patchPCMTone2Offset.tvfEnvLevel3Offset,
  "PCM2 TVF TVF Release Time": patch.patchPCMTone2Offset.tvfEnvTime4Offset,
  "PCM2 TVF TVF Attack Vel Sens":
    patch.patchPCMTone2Offset.tvfEnvTime1VelocitySensOffset,
  "PCM2 TVF TVF Attack Nuance Sens":
    patch.patchPCMTone2Offset.tvfEnvTime1NuanceSensOffset,
  "PCM2 TVA TVA Attack Time": patch.patchPCMTone2Offset.tvaEnvTime1Offset,
  "PCM2 TVA TVA Decay Time": patch.patchPCMTone2Offset.tvaEnvTime2Offset,
  "PCM2 TVA  TVA Sustain Level": patch.patchPCMTone2Offset.tvaEnvLevel3Offset,
  "PCM2 TVA  TVA Release Time": patch.patchPCMTone2Offset.tvaEnvTime4Offset,
  "PCM2 TVA TVA Attack Vel Sens":
    patch.patchPCMTone2Offset.tvaEnvTime1VelocitySensOffset,
  "PCM2 TVA TVA Attack Nuance Sens":
    patch.patchPCMTone2Offset.tvaEnvTime1NuanceSensOffset,
  "PCM2 TVA Level Nuance Sens": patch.patchPCMTone2Offset.nuanceLevelSens,
  "PCM2 TVA Release Mode": patch.patchPCMTone2.releaseMode,
  "PCM2 Pitch ENV Pitch Env Vel Sens":
    patch.patchPCMTone2Offset.pitchEnvVelocitySensOffset,
  "PCM2 Pitch ENV Pitch Env Depth": patch.patchPCMTone2Offset.pitchEnvOffset,
  "PCM2 Pitch ENV Attack Time": patch.patchPCMTone2Offset.pitchEnvTime1Offset,
  "PCM2 Pitch ENV Pitch Decay Time":
    patch.patchPCMTone2Offset.pitchEnvTime2Offset,
  "PCM2 LFO1 LFO1 Rate": patch.patchPCMTone2Offset.lfo1Rate,
  "PCM2 LFO1 LFO1 Pitch Depth": patch.patchPCMTone2Offset.lfo1PitchDepthOffset,
  "PCM2 LFO1 LFO1 TVF Depth": patch.patchPCMTone2Offset.lfo1TVFDepthOffset,
  "PCM2 LFO1 LFO1 TVA Depth": patch.patchPCMTone2Offset.lfo1TVADepthOffset,
  "PCM2 LFO1 LFO1 Pan Depth": patch.patchPCMTone2Offset.lfo1PanDepthOffset,
  "PCM2 LFO2 LFO2 Rate": patch.patchPCMTone2Offset.lfo2Rate,
  "PCM2 LFO2 LFO2 Pitch Depth": patch.patchPCMTone2Offset.lfo2PitchDepthOffset,
  "PCM2 LFO2 LFO2 TVF Depth": patch.patchPCMTone2Offset.lfo2TVFDepthOffset,
  "PCM2 LFO2 LFO2 TVA Depth": patch.patchPCMTone2Offset.lfo2TVADepthOffset,
  "PCM2 LFO2 LFO2 Pan Depth": patch.patchPCMTone2Offset.lfo2PanDepthOffset,
  "PCM2 Line Select": patch.patchPCMTone2.partOutputMFXSelect,
  // TODO: How to handle assign targets that aren't patch fields?
  // (Assuming that's what this is. Ask gumtown)
  "PCM2 Tone1 Bend": null,

  "Modeling Tone Switch": patch.modelingTone.muteSwitch,
  // TODO: Combine these into one parameter
  "Modeling Tone Number": [
    patch.modelingTone.toneCategory_guitar,
    patch.modelingTone.toneNumberEGtr_guitar,
    patch.modelingTone.toneNumberAc_guitar,
    patch.modelingTone.toneNumberEBass_guitar,
    patch.modelingTone.toneNumberSynth_guitar,
  ],
  "Modeling Tone Level": patch.modelingTone.level,
  "Modeling Tone String 1 Level": patch.modelingTone.string1Level,
  "Modeling Tone String 2 Level": patch.modelingTone.string2Level,
  "Modeling Tone String 3 Level": patch.modelingTone.string3Level,
  "Modeling Tone String 4 Level": patch.modelingTone.string4Level,
  "Modeling Tone String 5 Level": patch.modelingTone.string5Level,
  "Modeling Tone String 6 Level": patch.modelingTone.string6Level,
  "Modeling Pitch Pitch Shift": patch.modelingTone.pitchShiftString1,
  "Modeling Pitch Pitch Fine": patch.modelingTone.pitchShiftFineString1,
  "Modeling 12String Switch": patch.modelingTone.twelveStrSwitch,
  "Modeling 12String Direct Level": patch.modelingTone.twelveStrDirectLevel,
  "Modeling 12String Shift 1": patch.modelingTone.twelveStrShiftString1,
  "Modeling 12String Fine 1": patch.modelingTone.twelveStrFineString1,
  "Modeling 12String Shift 2": patch.modelingTone.twelveStrShiftString2,
  "Modeling 12String Fine 2": patch.modelingTone.twelveStrFineString2,
  "Modeling 12String Shift 3": patch.modelingTone.twelveStrShiftString3,
  "Modeling 12String Fine 3": patch.modelingTone.twelveStrFineString3,
  "Modeling 12String Shift 4": patch.modelingTone.twelveStrShiftString4,
  "Modeling 12String Fine 4": patch.modelingTone.twelveStrFineString4,
  "Modeling 12String Shift 5": patch.modelingTone.twelveStrShiftString5,
  "Modeling 12String Fine 5": patch.modelingTone.twelveStrFineString5,
  "Modeling 12String Shift 6": patch.modelingTone.twelveStrShiftString6,
  "Modeling 12String Fine 6": patch.modelingTone.twelveStrFineString6,

  "Modeling E.GTR Cla-ST,Mod-ST PU Select":
    patch.modelingTone.eGuitarPickupSelect5_guitar,
  "Modeling E.GTR HH,TE,LP,P9,RK,335,L4 PU Select":
    patch.modelingTone.eGuitarPickupSelect3_guitar,
  "Modeling E.GTR LIPS PU Select":
    patch.modelingTone.eGuitarPickupSelectLips_guitar,
  "Modeling E.GTR PU Volume": patch.modelingTone.eGuitarVolume_guitar,
  "Modeling E.GTR PU Tone": patch.modelingTone.eGuitarTone_guitar,

  "Modeling Acoustic Steel body Type": patch.modelingTone.steelType_guitar,
  "Modeling Acoustic Steel body Body": patch.modelingTone.steelBody_guitar,
  "Modeling Acoustic Steel body Tone": patch.modelingTone.steelTone_guitar,
  "Modeling Acoustic Nylon body Body": patch.modelingTone.nylonBody_guitar,
  "Modeling Acoustic Nylon body Attack": patch.modelingTone.nylonAttack_guitar,
  "Modeling Acoustic Nylon body Tone": patch.modelingTone.nylonTone_guitar,

  "Modeling Sitar body PU Select": patch.modelingTone.sitarPickup_guitar,
  "Modeling Sitar body Sens": patch.modelingTone.sitarSens_guitar,
  "Modeling Sitar body Body": patch.modelingTone.sitarBody_guitar,
  "Modeling Sitar body Color": patch.modelingTone.sitarColor_guitar,
  "Modeling Sitar body Decay": patch.modelingTone.sitarDecay_guitar,
  "Modeling Sitar body Buzz": patch.modelingTone.sitarBuzz_guitar,
  "Modeling Sitar body Attack Level": patch.modelingTone.sitarAttack_guitar,
  "Modeling Sitar body Tone": patch.modelingTone.sitarTone_guitar,

  "Modeling Banjo body Attack": patch.modelingTone.banjoAttack_guitar,
  "Modeling Banjo body Reso": patch.modelingTone.banjoReso_guitar,
  "Modeling Banjo body Tone": patch.modelingTone.banjoTone_guitar,

  "Modeling Resonator body Sustain": patch.modelingTone.resoSustain_guitar,
  "Modeling Resonator body Resonance": patch.modelingTone.resoResonance_guitar,
  "Modeling Resonator body Tone": patch.modelingTone.resoTone_guitar,

  "Modeling E.Bass Jazz PU Volume Rear":
    patch.modelingTone.eBassRearVolume_guitar,
  "Modeling E.Bass Jazz PU Volume Front":
    patch.modelingTone.eBassFrontVolume_guitar,
  "Modeling E.Bass PU Volume": patch.modelingTone.eBassVolume_guitar,
  "Modeling E.Bass PU Tone": patch.modelingTone.eBassTone_guitar,

  "Modeling SYNTH Analog Tone Mode": patch.modelingTone.gr300Mode_guitar,
  "Modeling SYNTH Analog Tone Comp": patch.modelingTone.gr300Comp_guitar,
  "Modeling SYNTH Analog Tone Filter Cutoff":
    patch.modelingTone.gr300Cutoff_guitar,
  "Modeling SYNTH Analog Tone Filter Reso":
    patch.modelingTone.gr300Resonance_guitar,
  "Modeling SYNTH Analog ENV MOD Sw":
    patch.modelingTone.gr300EnvModSwitch_guitar,
  "Modeling SYNTH Analog ENV MOD Sens":
    patch.modelingTone.gr300EnvModSens_guitar,
  "Modeling SYNTH Analog ENV MOD Attack":
    patch.modelingTone.gr300EnvModAttack_guitar,
  "Modeling SYNTH Analog Pitch Sw": patch.modelingTone.gr300PitchSwitch_guitar,
  "Modeling SYNTH Analog Pitch A": patch.modelingTone.gr300PitchA_guitar,
  "Modeling SYNTH Analog Pitch A Fine":
    patch.modelingTone.gr300PitchAFine_guitar,
  "Modeling SYNTH Analog Pitch B": patch.modelingTone.gr300PitchB_guitar,
  "Modeling SYNTH Analog Pitch B Fine":
    patch.modelingTone.gr300PitchBFine_guitar,
  "Modeling SYNTH Analog Pitch Duet": patch.modelingTone.gr300PitchDuet_guitar,
  "Modeling SYNTH Analog Pitch Sweep Sw":
    patch.modelingTone.gr300SweepSwitch_guitar,
  "Modeling SYNTH Analog Pitch Sweep Rise":
    patch.modelingTone.gr300SweepRise_guitar,
  "Modeling SYNTH Analog Pitch Sweep Fall":
    patch.modelingTone.gr300SweepFall_guitar,
  "Modeling SYNTH Analog Vibrato Sw":
    patch.modelingTone.gr300VibratoSwitch_guitar,
  "Modeling SYNTH Analog Vibrato Rate":
    patch.modelingTone.gr300VibratoRate_guitar,
  "Modeling SYNTH Analog Vibrato Depth":
    patch.modelingTone.gr300VibratoDepth_guitar,

  "Modeling SYNTH Wave Synth Type": patch.modelingTone.waveSynthType_guitar,
  "Modeling SYNTH Wave Synth Color": patch.modelingTone.waveSynthColor_guitar,

  "Modeling SYNTH Filter Bass Filter Cutoff":
    patch.modelingTone.filterBassCutoff_guitar,
  "Modeling SYNTH Filter Bass Filter Reso":
    patch.modelingTone.filterBassResonance_guitar,
  "Modeling SYNTH Filter Bass Filter Decay":
    patch.modelingTone.filterBassFilterDecay_guitar,
  "Modeling SYNTH Filter Bass Touch Sens":
    patch.modelingTone.filterBassTouchSens_guitar,
  "Modeling SYNTH Filter Bass Color": patch.modelingTone.filterBassColor_guitar,

  "Modeling SYNTH Crystal Attack Length":
    patch.modelingTone.crystalAttackLength_guitar,
  "Modeling SYNTH Crystal MOD Tune": patch.modelingTone.crystalModTune_guitar,
  "Modeling SYNTH Crystal MOD Depth": patch.modelingTone.crystalModDepth_guitar,
  "Modeling SYNTH Crystal  Attack Level":
    patch.modelingTone.crystalAttackLevel_guitar,
  "Modeling SYNTH Crystal Body Level": patch.modelingTone.crystalBody_guitar,
  "Modeling SYNTH Crystal Sustain": patch.modelingTone.crystalSustain_guitar,

  "Modeling SYNTH Organ Feet 16": patch.modelingTone.organFeet16_guitar,
  "Modeling SYNTH Organ Feet 8": patch.modelingTone.organFeet8_guitar,
  "Modeling SYNTH Organ Feet 4": patch.modelingTone.organFeet4_guitar,
  "Modeling SYNTH Organ Sustain": patch.modelingTone.organSustain_guitar,

  "Modeling SYNTH Brass Filter Cutoff": patch.modelingTone.brassCutoff_guitar,
  "Modeling SYNTH Brass Filter Reso": patch.modelingTone.brassResonance_guitar,
  "Modeling SYNTH Brass Touch Sens": patch.modelingTone.brassTouchSens_guitar,
  "Modeling SYNTH Brass Sustain": patch.modelingTone.brassSustain_guitar,

  "Modeling Line Select": patch.common.lineSelectModel,

  // TODO: How to handle assign targets that aren't patch fields?
  // (Assuming that's what this is. Ask gumtown)
  "Modeling Tone Bend": null,

  "AMP Switch": patch.ampModNs.ampSwitch,
  "AMP Gain": patch.ampModNs.ampGain,
  "AMP Level": patch.ampModNs.ampLevel,
  "AMP Gain Switch": patch.ampModNs.ampGainSwitch,
  "AMP SOLO Switch": patch.ampModNs.ampSoloSwitch,
  "AMP SOLO Level": patch.ampModNs.ampSoloLevel,
  "AMP Tone Bass": patch.ampModNs.ampBass,
  "AMP Tone Middle": patch.ampModNs.ampMiddle,
  "AMP Tone Treble": patch.ampModNs.ampTreble,
  "AMP Tone Presence": patch.ampModNs.ampPresence,
  "AMP Tone Bright": patch.ampModNs.ampBright,
  "AMP Speaker Type": patch.ampModNs.ampSpType,
  "AMP Spkr Mic Type": patch.ampModNs.ampMicType,
  "AMP Spkr Mic Distance": patch.ampModNs.ampMicDistance,
  "AMP Spkr Mic Position": patch.ampModNs.ampMicPosition,
  "AMP Spkr Mic Level": patch.ampModNs.ampMicLevel,

  "MOD Effect Switch": patch.ampModNs.modSwitch,
  "MOD Pan": patch.ampModNs.modPan,

  "MOD OD/DS Type": patch.ampModNs.odDsType,
  "MOD OD/DS Drive": patch.ampModNs.odDsDrive,
  "MOD OD/DS Tone": patch.ampModNs.odDsTone,
  "MOD OD/DS Level": patch.ampModNs.odDsLevel,

  "MOD WAH Mode": patch.ampModNs.wahMode,
  "MOD WAH Type": patch.ampModNs.wahType,
  "MOD WAH Pedal Position": patch.ampModNs.wahPedalPosition,
  "MOD WAH Sense": patch.ampModNs.wahSens,
  "MOD WAH Frequency": patch.ampModNs.wahFreq,
  "MOD WAH Peak": patch.ampModNs.wahPeak,
  "MOD WAH Level": patch.ampModNs.wahLevel,

  "MOD COMP Sustain": patch.ampModNs.compSustain,
  "MOD COMP Attack": patch.ampModNs.compAttack,
  "MOD COMP Level": patch.ampModNs.compLevel,

  "MOD LIMITER Threshold": patch.ampModNs.limiterThreshold,
  "MOD LIMITER Release": patch.ampModNs.limiterRelease,
  "MOD LIMITER Level": patch.ampModNs.limiterLevel,

  "MOD OCTAVE Effect": patch.ampModNs.octaveOctLevel,
  "MOD OCTAVE Direct": patch.ampModNs.octaveDryLevel,

  "MOD PHASER Type": patch.ampModNs.phaserType,
  "MOD PHASER Rate": patch.ampModNs.phaserRate,
  "MOD PHASER Depth": patch.ampModNs.phaserDepth,
  "MOD PHASER Resonance": patch.ampModNs.phaserResonance,
  "MOD PHASER Level": patch.ampModNs.phaserLevel,

  "MOD FLANGER Rate": patch.ampModNs.flangerRate,
  "MOD FLANGER Depth": patch.ampModNs.flangerDepth,
  "MOD FLANGER Manual": patch.ampModNs.flangerManual,
  "MOD FLANGER Resonance": patch.ampModNs.flangerResonance,
  "MOD FLANGER Level": patch.ampModNs.flangerLevel,

  "MOD TREMOLO Rate": patch.ampModNs.tremoloRate,
  "MOD TREMOLO Depth": patch.ampModNs.tremoloDepth,
  "MOD TREMOLO Wave Shape": patch.ampModNs.tremoloWaveShape,
  "MOD TREMOLO Level": patch.ampModNs.tremoloLevel,

  "MOD ROTARY Rate Slow": patch.ampModNs.rotaryRateSlow,
  "MOD ROTARY Rate Fast": patch.ampModNs.rotaryRateFast,
  "MOD ROTARY Depth": patch.ampModNs.rotaryDepth,
  "MOD ROTARY Speed Select": patch.ampModNs.rotarySelect,
  "MOD ROTARY Level": patch.ampModNs.rotaryLevel,

  "MOD UNI-V Rate": patch.ampModNs.uniVRate,
  "MOD UNI-V Depth": patch.ampModNs.uniVDepth,
  "MOD UNI-V Level": patch.ampModNs.uniVLevel,

  "MOD PAN Rate": patch.ampModNs.panRate,
  "MOD PAN Depth": patch.ampModNs.panDepth,
  "MOD PAN Wave Shape": patch.ampModNs.panWaveShape,
  "MOD PAN Level": patch.ampModNs.panLevel,

  "MOD DELAY Type": patch.ampModNs.delayType,
  "MOD DELAY Time": patch.ampModNs.delayTime,
  "MOD DELAY Feedback": patch.ampModNs.delayFeedback,
  "MOD DELAY Effect level": patch.ampModNs.delayEffectLevel,

  "MOD CHORUS Type": patch.ampModNs.chorusType,
  "MOD CHORUS Rate": patch.ampModNs.chorusRate,
  "MOD CHORUS Depth": patch.ampModNs.chorusDepth,
  "MOD CHORUS Effect Level": patch.ampModNs.chorusEffectLevel,

  "MOD EQ Low Cut": patch.ampModNs.eqLowCutoffFreq,
  "MOD EQ Low Gain": patch.ampModNs.eqLowGain,
  "MOD EQ Low-Mid Frequency": patch.ampModNs.eqLowMidCutoffFreq,
  "MOD EQ Low-Mid Q": patch.ampModNs.eqLowMidQ,
  "MOD EQ Low-Mid Gain": patch.ampModNs.eqLowMidGain,
  "MOD EQ High-Mid Frequency": patch.ampModNs.eqHighMidCutoffFreq,
  "MOD EQ High-Mid Q": patch.ampModNs.eqHighMidQ,
  "MOD EQ High-Mid Gain": patch.ampModNs.eqHighMidGain,
  "MOD EQ High Gain": patch.ampModNs.eqHighGain,
  "MOD EQ High Cut": patch.ampModNs.eqHighCutoffFreq,
  "MOD EQ Level": patch.ampModNs.eqLevel,

  "MOD NS Switch": patch.ampModNs.nsSwitch,
  "MOD NS Threshold": patch.ampModNs.nsThreshold,
  "MOD NS Release": patch.ampModNs.nsReleaseTime,

  "MFX Effect Switch": patch.mfx.mfxSwitch,
  "MFX Pan": patch.mfx.mfxPan,

  "MFX EQ Low Frequency": patch.mfx.eqLowFreq,
  "MFX EQ Low Gain": patch.mfx.eqLowGain,
  "MFX EQ Mid 1 Frequency": patch.mfx.eqMid1Freq,
  "MFX EQ Mid 1 Gain": patch.mfx.eqMid1Gain,
  "MFX EQ Mid 1 Q": patch.mfx.eqMid1Q,
  "MFX EQ Mid 2 Frequency": patch.mfx.eqMid2Freq,
  "MFX EQ Mid 2 Gain": patch.mfx.eqMid2Gain,
  "MFX EQ Mid 2 Q": patch.mfx.eqMid2Q,
  "MFX EQ High Frequency": patch.mfx.eqHighFreq,
  "MFX EQ High Gain": patch.mfx.eqHighGain,
  "MFX EQ Level": patch.mfx.eqLevel,

  "MFX FILTER Type": patch.mfx.superFilterFilterType,
  "MFX FILTER Slope": patch.mfx.superFilterFilterSlope,
  "MFX FILTER Cutoff": patch.mfx.superFilterFilterCutoff,
  "MFX FILTER Resonance": patch.mfx.superFilterFilterResonance,
  "MFX FILTER Gain": patch.mfx.superFilterFilterGain,
  "MFX FILTER Modulation Sw": patch.mfx.superFilterModulationSw,
  "MFX FILTER Modulation Wave": patch.mfx.superFilterModulationWave,
  "MFX FILTER Rate": patch.mfx.superFilterRate,
  "MFX FILTER Depth": patch.mfx.superFilterDepth,
  "MFX FILTER Attack": patch.mfx.superFilterAttack,
  "MFX FILTER Level": patch.mfx.superFilterLevel,

  "MFX PHASER Mode": patch.mfx.phaserMode,
  "MFX PHASER Manual": patch.mfx.phaserManual,
  "MFX PHASER Rate": patch.mfx.phaserRate,
  "MFX PHASER Depth": patch.mfx.phaserDepth,
  "MFX PHASER Polarity": patch.mfx.phaserPolarity,
  "MFX PHASER Resonance": patch.mfx.phaserResonance,
  "MFX PHASER Cross Feedback": patch.mfx.phaserCrossFeedback,
  "MFX PHASER Mix": patch.mfx.phaserMix,
  "MFX PHASER Low Gain": patch.mfx.phaserLowGain,
  "MFX PHASER High Gain": patch.mfx.phaserHighGain,
  "MFX PHASER Level": patch.mfx.phaserLevel,

  "MFX STEP PHASER Mode": patch.mfx.stepPhaserMode,
  "MFX STEP PHASER Manual": patch.mfx.stepPhaserManual,
  "MFX STEP PHASER Rate": patch.mfx.stepPhaserRate,
  "MFX STEP PHASER Depth": patch.mfx.stepPhaserDepth,
  "MFX STEP PHASER Polarity": patch.mfx.stepPhaserPolarity,
  "MFX STEP PHASER Resonance": patch.mfx.stepPhaserResonance,
  "MFX STEP PHASER Cross Feedback": patch.mfx.stepPhaserCrossFeedback,
  "MFX STEP PHASER Step rate": patch.mfx.stepPhaserStepRate,
  "MFX STEP PHASER Mix": patch.mfx.stepPhaserMix,
  "MFX STEP PHASER Low Gain": patch.mfx.stepPhaserLowGain,
  "MFX STEP PHASER High Gain": patch.mfx.stepPhaserHighGain,
  "MFX STEP PHASER Level": patch.mfx.stepPhaserLevel,

  "MFX RING MOD Frequency": patch.mfx.ringModulatorFrequency,
  "MFX RING MOD Sense": patch.mfx.ringModulatorSens,
  "MFX RING MOD Polarity": patch.mfx.ringModulatorPolarity,
  "MFX RING MOD Low Gain": patch.mfx.ringModulatorLowGain,
  "MFX RING MOD High Gain": patch.mfx.ringModulatorHighGain,
  "MFX RING MOD Balance": patch.mfx.ringModulatorBalance,
  "MFX RING MOD Level": patch.mfx.ringModulatorLevel,

  "MFX TREMOLO Mod Wave": patch.mfx.tremoloModWave,
  "MFX TREMOLO Rate": patch.mfx.tremoloRate,
  "MFX TREMOLO Depth": patch.mfx.tremoloDepth,
  "MFX TREMOLO Low Gain": patch.mfx.tremoloLowGain,
  "MFX TREMOLO High Gain": patch.mfx.tremoloHighGain,
  "MFX TREMOLO Level": patch.mfx.tremoloLevel,

  "MFX AUTO PAN Mod Wave": patch.mfx.autoPanModWave,
  "MFX AUTO PAN Rate": patch.mfx.autoPanRate,
  "MFX AUTO PAN Depth": patch.mfx.autoPanDepth,
  "MFX AUTO PAN Low Gain": patch.mfx.autoPanLowGain,
  "MFX AUTO PAN High Gain": patch.mfx.autoPanHighGain,
  "MFX AUTO PAN Level": patch.mfx.autoPanLevel,

  "MFX SLICER Pattern": patch.mfx.slicerPattern,
  "MFX SLICER SLICER Rate": patch.mfx.slicerRate,
  "MFX SLICER Attack": patch.mfx.slicerAttack,
  "MFX SLICER Input Sync Sw": patch.mfx.slicerInputSyncSw,
  "MFX SLICER Input Sync Threshold": patch.mfx.slicerInputSyncThreshold,
  "MFX SLICER Level": patch.mfx.slicerLevel,

  "MFX VK ROTARY Speed": patch.mfx.vkRotarySpeed,
  "MFX VK ROTARY Brake": patch.mfx.vkRotaryBrake,
  "MFX VK ROTARY Woofer Slow Speed": patch.mfx.vkRotaryWooferSlowSpeed,
  "MFX VK ROTARY Woofer Fast Speed": patch.mfx.vkRotaryWooferFastSpeed,
  "MFX VK ROTARY Woofer Trans Up": patch.mfx.vkRotaryWooferTransUp,
  "MFX VK ROTARY Woofer Trans Down": patch.mfx.vkRotaryWooferTransDown,
  "MFX VK ROTARY Woofer Level": patch.mfx.vkRotaryWooferLevel,
  "MFX VK ROTARY Tweeter Slow Speed": patch.mfx.vkRotaryTweeterSlowSpeed,
  "MFX VK ROTARY Tweeter Fast Speed": patch.mfx.vkRotaryTweeterFastSpeed,
  "MFX VK ROTARY Tweeter Trans Up": patch.mfx.vkRotaryTweeterTransUp,
  "MFX VK ROTARY Tweeter Trans Down": patch.mfx.vkRotaryTweeterTransDown,
  "MFX VK ROTARY Tweeter Level": patch.mfx.vkRotaryTweeterLevel,
  "MFX VK ROTARY Spread": patch.mfx.vkRotarySpread,
  "MFX VK ROTARY Low Gain": patch.mfx.vkRotaryLowGain,
  "MFX VK ROTARY High Gain": patch.mfx.vkRotaryHighGain,
  "MFX VK ROTARY Level": patch.mfx.vkRotaryLevel,

  "MFX HEXA-CHORUS Pre Delay": patch.mfx.hexaChorusPreDelay,
  "MFX HEXA-CHORUS Rate": patch.mfx.hexaChorusRate,
  "MFX HEXA-CHORUS Depth": patch.mfx.hexaChorusDepth,
  "MFX HEXA-CHORUS Pre Dly Deviation": patch.mfx.hexaChorusPreDelayDeviation,
  "MFX HEXA-CHORUS Depth Deviation": patch.mfx.hexaChorusDepthDeviation,
  "MFX HEXA-CHORUS Pan Deviation": patch.mfx.hexaChorusPanDeviation,
  "MFX HEXA-CHORUS Balance": patch.mfx.hexaChorusBalance,
  "MFX HEXA-CHORUS Level": patch.mfx.hexaChorusLevel,

  "MFX SPACE-D Pre Delay": patch.mfx.spaceDPreDelay,
  "MFX SPACE-D Rate": patch.mfx.spaceDRate,
  "MFX SPACE-D Depth": patch.mfx.spaceDDepth,
  "MFX SPACE-D Phase": patch.mfx.spaceDPhase,
  "MFX SPACE-D Low Gain": patch.mfx.spaceDLowGain,
  "MFX SPACE-D High Gain": patch.mfx.spaceDHighGain,
  "MFX SPACE-D Balance": patch.mfx.spaceDBalance,
  "MFX SPACE-D Level": patch.mfx.spaceDLevel,

  "MFX FLANGER Filter Type": patch.mfx.flangerFilterType,
  "MFX FLANGER Cutoff Frequency": patch.mfx.flangerCutoffFreq,
  "MFX FLANGER Pre Delay": patch.mfx.flangerPreDelay,
  "MFX FLANGER Rate": patch.mfx.flangerRate,
  "MFX FLANGER Depth": patch.mfx.flangerDepth,
  "MFX FLANGER Phase": patch.mfx.flangerPhase,
  "MFX FLANGER Feedback": patch.mfx.flangerFeedback,
  "MFX FLANGER Low Gain": patch.mfx.flangerLowGain,
  "MFX FLANGER High Gain": patch.mfx.flangerHighGain,
  "MFX FLANGER Balance": patch.mfx.flangerBalance,
  "MFX FLANGER Level": patch.mfx.flangerLevel,

  "MFX STEP-FLANGER Filter Type": patch.mfx.stepFlangerFilterType,
  "MFX STEP-FLANGER Cutoff Frequency": patch.mfx.stepFlangerCutoffFreq,
  "MFX STEP-FLANGER Pre Delay": patch.mfx.stepFlangerPreDelay,
  "MFX STEP-FLANGER Rate": patch.mfx.stepFlangerRate,
  "MFX STEP-FLANGER Depth": patch.mfx.stepFlangerDepth,
  "MFX STEP-FLANGER Phase": patch.mfx.stepFlangerPhase,
  "MFX STEP-FLANGER Feedback": patch.mfx.stepFlangerFeedback,
  "MFX STEP-FLANGER Step Rate": patch.mfx.stepFlangerStepRate,
  "MFX STEP-FLANGER Low Gain": patch.mfx.stepFlangerLowGain,
  "MFX STEP-FLANGER High Gain": patch.mfx.stepFlangerHighGain,
  "MFX STEP-FLANGER Balance": patch.mfx.stepFlangerBalance,
  "MFX STEP-FLANGER Level": patch.mfx.stepFlangerLevel,

  "MFX AMP-SIM PreAmp Sw": patch.mfx.gtrAmpSimPreAmpSw,
  "MFX AMP-SIM PreAmp Type": patch.mfx.gtrAmpSimPreAmpType,
  "MFX AMP-SIM PreAmp Volume": patch.mfx.gtrAmpSimPreAmpVolume,
  "MFX AMP-SIM PreAmp Master": patch.mfx.gtrAmpSimPreAmpMaster,
  "MFX AMP-SIM PreAmp Gain": patch.mfx.gtrAmpSimPreAmpGain,
  "MFX AMP-SIM PreAmp Bass": patch.mfx.gtrAmpSimPreAmpBass,
  "MFX AMP-SIM PreAmp Middle": patch.mfx.gtrAmpSimPreAmpMiddle,
  "MFX AMP-SIM PreAmp Treble": patch.mfx.gtrAmpSimPreAmpTreble,
  "MFX AMP-SIM PreAmp Presence": patch.mfx.gtrAmpSimPreAmpPresence,
  "MFX AMP-SIM PreAmp Bright": patch.mfx.gtrAmpSimPreAmpBright,
  "MFX AMP-SIM Speaker Sw": patch.mfx.gtrAmpSimSpeakerSw,
  "MFX AMP-SIM Speaker Type": patch.mfx.gtrAmpSimSpeakerType,
  "MFX AMP-SIM Speaker Mic Setting": patch.mfx.gtrAmpSimMicSetting,
  "MFX AMP-SIM Speaker Mic Level": patch.mfx.gtrAmpSimMicLevel,
  "MFX AMP-SIM Speaker Direct Level": patch.mfx.gtrAmpSimDirectLevel,
  "MFX AMP-SIM Pan": patch.mfx.gtrAmpSimPan,
  "MFX AMP-SIM Level": patch.mfx.gtrAmpSimLevel,

  "MFX COMPRESSOR Attack": patch.mfx.compressorAttack,
  "MFX COMPRESSOR Threshold": patch.mfx.compressorThreshold,
  "MFX COMPRESSOR Post Gain": patch.mfx.compressorPostGain,
  "MFX COMPRESSOR Low Gain": patch.mfx.compressorLowGain,
  "MFX COMPRESSOR High Gain": patch.mfx.compressorHighGain,
  "MFX COMPRESSOR Level": patch.mfx.compressorLevel,

  "MFX LIMITER Release": patch.mfx.limiterRelease,
  "MFX LIMITER Threshold": patch.mfx.limiterThreshold,
  "MFX LIMITER Ratio": patch.mfx.limiterRatio,
  "MFX LIMITER Post Gain": patch.mfx.limiterPostGain,
  "MFX LIMITER Low Gain": patch.mfx.limiterLowGain,
  "MFX LIMITER High Gain": patch.mfx.limiterHighGain,
  "MFX LIMITER Level": patch.mfx.limiterLevel,

  // TODO: Figure out the relationship between this and the tempo-based field(s).
  // On the GR-55 it looks like only the time-based field is assignable.
  // TODO: The field's representation differs from the assign min/max field's apparent representation.
  "MFX 3TAP DELAY Delay Left": patch.mfx.threeTapDelayDelayLeft,
  "MFX 3TAP DELAY Delay Right": patch.mfx.threeTapDelayDelayRight,
  "MFX 3TAP DELAY Delay Center": patch.mfx.threeTapDelayDelayCenter,
  "MFX 3TAP DELAY Center Feedback": patch.mfx.threeTapDelayCenterFeedback,
  "MFX 3TAP DELAY HF Damp": patch.mfx.threeTapDelayHFDamp,
  "MFX 3TAP DELAY Left Level": patch.mfx.threeTapDelayLeftLevel,
  "MFX 3TAP DELAY Right Level": patch.mfx.threeTapDelayRightLevel,
  "MFX 3TAP DELAY Center Level": patch.mfx.threeTapDelayCenterLevel,
  "MFX 3TAP DELAY Low Gain": patch.mfx.threeTapDelayLowGain,
  "MFX 3TAP DELAY High Gain": patch.mfx.threeTapDelayHighGain,
  "MFX 3TAP DELAY Balance": patch.mfx.threeTapDelayBalance,
  "MFX 3TAP DELAY Level": patch.mfx.threeTapDelayLevel,

  // TODO: Figure out the relationship between this and the tempo-based field(s).
  // On the GR-55 it looks like only the time-based field is assignable.
  // TODO: The field's representation differs from the assign min/max field's apparent representation.
  "MFX TIME DELAY Delay Time": patch.mfx.timeCtrlDelayDelayTime,
  "MFX TIME DELAY Acceleration": patch.mfx.timeCtrlDelayAcceleration,
  "MFX TIME DELAY Feedback": patch.mfx.timeCtrlDelayFeedback,
  "MFX TIME DELAY HF Damp": patch.mfx.timeCtrlDelayHFDamp,
  "MFX TIME DELAY Low Gain": patch.mfx.timeCtrlDelayLowGain,
  "MFX TIME DELAY High Gain": patch.mfx.timeCtrlDelayHighGain,
  "MFX TIME DELAY Balance": patch.mfx.timeCtrlDelayBalance,
  "MFX TIME DELAY Level": patch.mfx.timeCtrlDelayLevel,

  "MFX LOFI COMP Pre Filter Type": patch.mfx.lofiCompressPreFilterType,
  "MFX LOFI COMP LoFi Type": patch.mfx.lofiCompressLoFiType,
  "MFX LOFI COMP Post Filter Type": patch.mfx.lofiCompressPostFilterType,
  "MFX LOFI COMP Post Filter Cutoff": patch.mfx.lofiCompressPostFilterCutoff,
  "MFX LOFI COMP Low Gain": patch.mfx.lofiCompressLowGain,
  "MFX LOFI COMP High Gain": patch.mfx.lofiCompressHighGain,
  "MFX LOFI COMP Balance": patch.mfx.lofiCompressBalance,
  "MFX LOFI COMP Level": patch.mfx.lofiCompressLevel,

  "MFX PITCH-SHIFTER Coarse": patch.mfx.pitchShifterCoarse,
  "MFX PITCH-SHIFTER Fine": patch.mfx.pitchShifterFine,
  // TODO: Figure out the relationship between this and the tempo-based field(s).
  // On the GR-55 it looks like only the time-based field is assignable.
  // TODO: The field's representation differs from the assign min/max field's apparent representation.
  "MFX PITCH-SHIFTER Delay Time": patch.mfx.pitchShifterDelayTime,
  "MFX PITCH-SHIFTER Feedback": patch.mfx.pitchShifterFeedback,
  "MFX PITCH-SHIFTER Low Gain": patch.mfx.pitchShifterLowGain,
  "MFX PITCH-SHIFTER High Gain": patch.mfx.pitchShifterHighGain,
  "MFX PITCH-SHIFTER Balance": patch.mfx.pitchShifterBalance,
  "MFX PITCH-SHIFTER Level": patch.mfx.pitchShifterLevel,

  "DELAY Effect Switch": patch.sendsAndEq.delaySwitch,
  "DELAY Type": patch.sendsAndEq.delayType,
  "DELAY Time": patch.sendsAndEq.delayTime,
  "DELAY Feedback": patch.sendsAndEq.delayFeedback,
  "DELAY Effect Level": patch.sendsAndEq.delayEffectLevel,
  "DELAY MFX Send": patch.mfx.mfxDelaySendLevel,
  "DELAY MOD Send": patch.ampModNs.modDelaySendLevel,
  "DELAY BYPASS Send": patch.common.bypassDelaySendLevel,

  "REVERB Effect Switch": patch.sendsAndEq.reverbSwitch,
  "REVERB Type": patch.sendsAndEq.reverbTime,
  "REVERB Time": patch.sendsAndEq.reverbTime,
  "REVERB High Cut": patch.sendsAndEq.reverbHighCut,
  "REVERB Effect Level": patch.sendsAndEq.reverbEffectLevel,
  "REVERB MFX Send": patch.mfx.mfxReverbSendLevel,
  "REVERB MOD Send": patch.ampModNs.modReverbSendLevel,
  "REVERB BYPASS Send": patch.common.bypassReverbSendLevel,

  "CHORUS Effect Switch": patch.sendsAndEq.chorusSwitch,
  "CHORUS Type": patch.sendsAndEq.chorusType,
  "CHORUS Rate": patch.sendsAndEq.chorusRate,
  "CHORUS Depth": patch.sendsAndEq.chorusDepth,
  "CHORUS Effect Level": patch.sendsAndEq.chorusEffectLevel,
  "CHORUS MFX Send": patch.mfx.mfxChorusSendLevel,
  "CHORUS MOD Send": patch.ampModNs.modChorusSendLevel,
  "CHORUS BYPASS Send": patch.common.bypassChorusSendLevel,

  "EQ Effect Switch": patch.sendsAndEq.eqSwitch,
  "EQ Low Cut": patch.sendsAndEq.eqLowCutoffFreq,
  "EQ Low Gain": patch.sendsAndEq.eqLowGain,
  "EQ Low-Mid Frequency": patch.sendsAndEq.eqLowMidCutoffFreq,
  "EQ Low-Mid Q": patch.sendsAndEq.eqLowMidQ,
  "EQ Low-Mid Gain": patch.sendsAndEq.eqLowMidGain,
  "EQ High-Mid Frequency": patch.sendsAndEq.eqHighMidCutoffFreq,
  "EQ High-Mid Q": patch.sendsAndEq.eqHighMidQ,
  "EQ High-Mid Gain": patch.sendsAndEq.eqHighMidGain,
  "EQ High Gain": patch.sendsAndEq.eqHighGain,
  "EQ High Cut": patch.sendsAndEq.eqHighCutoffFreq,
  "EQ Level": patch.sendsAndEq.eqLevel,
  "EQ Character": patch.sendsAndEq.ezCharacter,

  "NORMAL PICKUP Level": patch.common.normalPuLevel,
  "NORMAL PICKUP Line Select": patch.common.lineSelectNormalPU,
  "ALTERNATE TUNING Switch": patch.common.altTuneSwitch,
  "PATCH TEMPO": patch.common.patchTempo,
  "GUITAR OUT SOURCE": patch.common.guitarOutSource,
  "PATCH LEVEL": patch.common.patchLevel,
};

// TODO: Test that the bass mode mapping is correct.
export const RolandGR55PatchAssignsMapBassMode = {
  "PCM1 Tone Switch": patch.patchPCMTone1.muteSwitch,
  "PCM1 Tone Number": patch.patchPCMTone1.toneSelect,
  "PCM1 Tone Level": patch.patchPCMTone1.partLevel,
  "PCM1 Tone Octave": patch.patchPCMTone1.partOctaveShift,
  "PCM1 Tone Chromatic": patch.patchPCMTone1.chromatic,
  "PCM1 Tone Legato": patch.patchPCMTone1.legatoSwitch,
  "PCM1 Tone Lev Velo Sens":
    patch.patchPCMTone1Offset.tvaLevelVelocitySensOffset,
  "PCM1 Tone Velo Curve Type": patch.patchPCMTone1Offset.tvaLevelVelocityCurve,
  "PCM1 Tone Nuance Sw": patch.patchPCMTone1.nuanceSwitch,
  "PCM1 Tone Pan": patch.patchPCMTone1.partPan,
  "PCM1 Tone String Lev 1": patch.patchPCMTone1.string1Level,
  "PCM1 Tone String Lev 2": patch.patchPCMTone1.string2Level,
  "PCM1 Tone String Lev 3": patch.patchPCMTone1.string3Level,
  "PCM1 Tone String Lev 4": patch.patchPCMTone1.string4Level,
  "PCM1 Tone String Lev 5": patch.patchPCMTone1.string5Level,
  "PCM1 Tone String Lev 6": patch.patchPCMTone1.string6Level,
  "PCM1 Pitch Pitch shift": patch.patchPCMTone1.partCoarseTune,
  "PCM1 Pitch Pitch Fine": patch.patchPCMTone1.partFineTune,
  "PCM1 Pitch Portamento Sw": patch.patchPCMTone1.partPortamentoSwitch,
  "PCM1 Pitch Portamento Type": patch.patchPCMTone1Offset.partPortamentoType,
  "PCM1 Pitch Portamento Time": patch.patchPCMTone1.portamentoTime,
  "PCM1 Filter Filter Type": patch.patchPCMTone1Offset.tvfFilterType,
  "PCM1 Filter CutOff": patch.patchPCMTone1Offset.tvfCutoffFrequencyOffset,
  "PCM1 Filter Resonance": patch.patchPCMTone1Offset.tvfResonanceOffset,
  "PCM1 Filter Cutoff Velo Sens":
    patch.patchPCMTone1Offset.tvfCutoffVelocitySens,
  "PCM1 Filter Cutoff Nuance Sens": patch.patchPCMTone1Offset.nuanceCutoffSens,
  "PCM1 Filter Cutoff Velo Curve":
    patch.patchPCMTone1Offset.tvfCutoffVelocityCurve,
  "PCM1 Filter Cutoff Keyfollow":
    patch.patchPCMTone1Offset.tvfCutoffKeyfollowOffset,
  "PCM1 TVF TVF Env Depth": patch.patchPCMTone1Offset.tvfEnvDepthOffset,
  "PCM1 TVF TVF Attack Time": patch.patchPCMTone1Offset.tvfEnvTime1Offset,
  "PCM1 TVF TVF Decay Time": patch.patchPCMTone1Offset.tvfEnvTime2Offset,
  "PCM1 TVF TVF Sustain level": patch.patchPCMTone1Offset.tvfEnvLevel3Offset,
  "PCM1 TVF TVF Release Time": patch.patchPCMTone1Offset.tvfEnvTime4Offset,
  "PCM1 TVF TVF Attack Vel Sens":
    patch.patchPCMTone1Offset.tvfEnvTime1VelocitySensOffset,
  "PCM1 TVF TVF Attack Nuance Sens":
    patch.patchPCMTone1Offset.tvfEnvTime1NuanceSensOffset,
  "PCM1 TVA TVA Attack Time": patch.patchPCMTone1Offset.tvaEnvTime1Offset,
  "PCM1 TVA TVA Decay Time": patch.patchPCMTone1Offset.tvaEnvTime2Offset,
  "PCM1 TVA  TVA Sustain Level": patch.patchPCMTone1Offset.tvaEnvLevel3Offset,
  "PCM1 TVA  TVA Release Time": patch.patchPCMTone1Offset.tvaEnvTime4Offset,
  "PCM1 TVA TVA Attack Vel Sens":
    patch.patchPCMTone1Offset.tvaEnvTime1VelocitySensOffset,
  "PCM1 TVA TVA Attack Nuance Sens":
    patch.patchPCMTone1Offset.tvaEnvTime1NuanceSensOffset,
  "PCM1 TVA Level Nuance Sens": patch.patchPCMTone1Offset.nuanceLevelSens,
  "PCM1 TVA Release Mode": patch.patchPCMTone1.releaseMode,
  "PCM1 Pitch ENV Pitch Env Vel Sens":
    patch.patchPCMTone1Offset.pitchEnvVelocitySensOffset,
  "PCM1 Pitch ENV Pitch Env Depth": patch.patchPCMTone1Offset.pitchEnvOffset,
  "PCM1 Pitch ENV Attack Time": patch.patchPCMTone1Offset.pitchEnvTime1Offset,
  "PCM1 Pitch ENV Pitch Decay Time":
    patch.patchPCMTone1Offset.pitchEnvTime2Offset,
  "PCM1 LFO1 LFO1 Rate": patch.patchPCMTone1Offset.lfo1Rate,
  "PCM1 LFO1 LFO1 Pitch Depth": patch.patchPCMTone1Offset.lfo1PitchDepthOffset,
  "PCM1 LFO1 LFO1 TVF Depth": patch.patchPCMTone1Offset.lfo1TVFDepthOffset,
  "PCM1 LFO1 LFO1 TVA Depth": patch.patchPCMTone1Offset.lfo1TVADepthOffset,
  "PCM1 LFO1 LFO1 Pan Depth": patch.patchPCMTone1Offset.lfo1PanDepthOffset,
  "PCM1 LFO2 LFO2 Rate": patch.patchPCMTone1Offset.lfo2Rate,
  "PCM1 LFO2 LFO2 Pitch Depth": patch.patchPCMTone1Offset.lfo2PitchDepthOffset,
  "PCM1 LFO2 LFO2 TVF Depth": patch.patchPCMTone1Offset.lfo2TVFDepthOffset,
  "PCM1 LFO2 LFO2 TVA Depth": patch.patchPCMTone1Offset.lfo2TVADepthOffset,
  "PCM1 LFO2 LFO2 Pan Depth": patch.patchPCMTone1Offset.lfo2PanDepthOffset,
  "PCM1 Line Select": patch.patchPCMTone1.partOutputMFXSelect,
  // TODO: How to handle assign targets that aren't patch fields?
  // (Assuming that's what this is. Ask gumtown)
  "PCM1 Tone1 Bend": null,

  "PCM2 Tone Switch": patch.patchPCMTone2.muteSwitch,
  "PCM2 Tone Number": patch.patchPCMTone2.toneSelect,
  "PCM2 Tone Level": patch.patchPCMTone2.partLevel,
  "PCM2 Tone Octave": patch.patchPCMTone2.partOctaveShift,
  "PCM2 Tone Chromatic": patch.patchPCMTone2.chromatic,
  "PCM2 Tone Legato": patch.patchPCMTone2.legatoSwitch,
  "PCM2 Tone Lev Velo Sens":
    patch.patchPCMTone2Offset.tvaLevelVelocitySensOffset,
  "PCM2 Tone Velo Curve Type": patch.patchPCMTone2Offset.tvaLevelVelocityCurve,
  "PCM2 Tone Nuance Sw": patch.patchPCMTone2.nuanceSwitch,
  "PCM2 Tone Pan": patch.patchPCMTone2.partPan,
  "PCM2 Tone String Lev 1": patch.patchPCMTone2.string1Level,
  "PCM2 Tone String Lev 2": patch.patchPCMTone2.string2Level,
  "PCM2 Tone String Lev 3": patch.patchPCMTone2.string3Level,
  "PCM2 Tone String Lev 4": patch.patchPCMTone2.string4Level,
  "PCM2 Tone String Lev 5": patch.patchPCMTone2.string5Level,
  "PCM2 Tone String Lev 6": patch.patchPCMTone2.string6Level,
  "PCM2 Pitch Pitch shift": patch.patchPCMTone2.partCoarseTune,
  "PCM2 Pitch Pitch Fine": patch.patchPCMTone2.partFineTune,
  "PCM2 Pitch Portamento Sw": patch.patchPCMTone2.partPortamentoSwitch,
  "PCM2 Pitch Portamento Type": patch.patchPCMTone2Offset.partPortamentoType,
  "PCM2 Pitch Portamento Time": patch.patchPCMTone2.portamentoTime,
  "PCM2 Filter Filter Type": patch.patchPCMTone2Offset.tvfFilterType,
  "PCM2 Filter CutOff": patch.patchPCMTone2Offset.tvfCutoffFrequencyOffset,
  "PCM2 Filter Resonance": patch.patchPCMTone2Offset.tvfResonanceOffset,
  "PCM2 Filter Cutoff Velo Sens":
    patch.patchPCMTone2Offset.tvfCutoffVelocitySens,
  "PCM2 Filter Cutoff Nuance Sens": patch.patchPCMTone2Offset.nuanceCutoffSens,
  "PCM2 Filter Cutoff Velo Curve":
    patch.patchPCMTone2Offset.tvfCutoffVelocityCurve,
  "PCM2 Filter Cutoff Keyfollow":
    patch.patchPCMTone2Offset.tvfCutoffKeyfollowOffset,
  "PCM2 TVF TVF Env Depth": patch.patchPCMTone2Offset.tvfEnvDepthOffset,
  "PCM2 TVF TVF Attack Time": patch.patchPCMTone2Offset.tvfEnvTime1Offset,
  "PCM2 TVF TVF Decay Time": patch.patchPCMTone2Offset.tvfEnvTime2Offset,
  "PCM2 TVF TVF Sustain level": patch.patchPCMTone2Offset.tvfEnvLevel3Offset,
  "PCM2 TVF TVF Release Time": patch.patchPCMTone2Offset.tvfEnvTime4Offset,
  "PCM2 TVF TVF Attack Vel Sens":
    patch.patchPCMTone2Offset.tvfEnvTime1VelocitySensOffset,
  "PCM2 TVF TVF Attack Nuance Sens":
    patch.patchPCMTone2Offset.tvfEnvTime1NuanceSensOffset,
  "PCM2 TVA TVA Attack Time": patch.patchPCMTone2Offset.tvaEnvTime1Offset,
  "PCM2 TVA TVA Decay Time": patch.patchPCMTone2Offset.tvaEnvTime2Offset,
  "PCM2 TVA  TVA Sustain Level": patch.patchPCMTone2Offset.tvaEnvLevel3Offset,
  "PCM2 TVA  TVA Release Time": patch.patchPCMTone2Offset.tvaEnvTime4Offset,
  "PCM2 TVA TVA Attack Vel Sens":
    patch.patchPCMTone2Offset.tvaEnvTime1VelocitySensOffset,
  "PCM2 TVA TVA Attack Nuance Sens":
    patch.patchPCMTone2Offset.tvaEnvTime1NuanceSensOffset,
  "PCM2 TVA Level Nuance Sens": patch.patchPCMTone2Offset.nuanceLevelSens,
  "PCM2 TVA Release Mode": patch.patchPCMTone2.releaseMode,
  "PCM2 Pitch ENV Pitch Env Vel Sens":
    patch.patchPCMTone2Offset.pitchEnvVelocitySensOffset,
  "PCM2 Pitch ENV Pitch Env Depth": patch.patchPCMTone2Offset.pitchEnvOffset,
  "PCM2 Pitch ENV Attack Time": patch.patchPCMTone2Offset.pitchEnvTime1Offset,
  "PCM2 Pitch ENV Pitch Decay Time":
    patch.patchPCMTone2Offset.pitchEnvTime2Offset,
  "PCM2 LFO1 LFO1 Rate": patch.patchPCMTone2Offset.lfo1Rate,
  "PCM2 LFO1 LFO1 Pitch Depth": patch.patchPCMTone2Offset.lfo1PitchDepthOffset,
  "PCM2 LFO1 LFO1 TVF Depth": patch.patchPCMTone2Offset.lfo1TVFDepthOffset,
  "PCM2 LFO1 LFO1 TVA Depth": patch.patchPCMTone2Offset.lfo1TVADepthOffset,
  "PCM2 LFO1 LFO1 Pan Depth": patch.patchPCMTone2Offset.lfo1PanDepthOffset,
  "PCM2 LFO2 LFO2 Rate": patch.patchPCMTone2Offset.lfo2Rate,
  "PCM2 LFO2 LFO2 Pitch Depth": patch.patchPCMTone2Offset.lfo2PitchDepthOffset,
  "PCM2 LFO2 LFO2 TVF Depth": patch.patchPCMTone2Offset.lfo2TVFDepthOffset,
  "PCM2 LFO2 LFO2 TVA Depth": patch.patchPCMTone2Offset.lfo2TVADepthOffset,
  "PCM2 LFO2 LFO2 Pan Depth": patch.patchPCMTone2Offset.lfo2PanDepthOffset,
  "PCM2 Line Select": patch.patchPCMTone2.partOutputMFXSelect,
  // TODO: How to handle assign targets that aren't patch fields?
  // (Assuming that's what this is. Ask gumtown)
  "PCM2 Tone1 Bend": null,

  "Modeling Tone Switch": patch.modelingTone.muteSwitch,
  // TODO: Combine these into one parameter
  "Modeling Tone Number": [
    patch.modelingTone.toneCategory_bass,
    patch.modelingTone.toneNumberEGtr_bass,
    patch.modelingTone.toneNumberEBass_bass,
    patch.modelingTone.toneNumberSynth_bass,
  ],
  "Modeling Tone Level": patch.modelingTone.level,
  "Modeling Tone String 1 Level": patch.modelingTone.string1Level,
  "Modeling Tone String 2 Level": patch.modelingTone.string2Level,
  "Modeling Tone String 3 Level": patch.modelingTone.string3Level,
  "Modeling Tone String 4 Level": patch.modelingTone.string4Level,
  "Modeling Tone String 5 Level": patch.modelingTone.string5Level,
  "Modeling Tone String 6 Level": patch.modelingTone.string6Level,
  "Modeling Pitch Pitch Shift": patch.modelingTone.pitchShiftString1,
  "Modeling Pitch Pitch Fine": patch.modelingTone.pitchShiftFineString1,
  "Modeling 12String Switch": patch.modelingTone.twelveStrSwitch,
  "Modeling 12String Direct Level": patch.modelingTone.twelveStrDirectLevel,
  "Modeling 12String Shift 1": patch.modelingTone.twelveStrShiftString1,
  "Modeling 12String Fine 1": patch.modelingTone.twelveStrFineString1,
  "Modeling 12String Shift 2": patch.modelingTone.twelveStrShiftString2,
  "Modeling 12String Fine 2": patch.modelingTone.twelveStrFineString2,
  "Modeling 12String Shift 3": patch.modelingTone.twelveStrShiftString3,
  "Modeling 12String Fine 3": patch.modelingTone.twelveStrFineString3,
  "Modeling 12String Shift 4": patch.modelingTone.twelveStrShiftString4,
  "Modeling 12String Fine 4": patch.modelingTone.twelveStrFineString4,
  "Modeling 12String Shift 5": patch.modelingTone.twelveStrShiftString5,
  "Modeling 12String Fine 5": patch.modelingTone.twelveStrFineString5,
  "Modeling 12String Shift 6": patch.modelingTone.twelveStrShiftString6,
  "Modeling 12String Fine 6": patch.modelingTone.twelveStrFineString6,

  "Modeling E.Bass PU Volume": patch.modelingTone.eBassVolume_bass,
  "Modeling E.Bass PU Rear Volume": patch.modelingTone.eBassRearVolume_bass,
  "Modeling E.Bass PU Front Volume": patch.modelingTone.eBassFrontVolume_bass,
  "Modeling E.Bass PU Tone": patch.modelingTone.eBassTone_bass,
  "Modeling E.Bass M-Man PU Treble": patch.modelingTone.eBassTreble_bass,
  "Modeling E.Bass M-Man PU Bass": patch.modelingTone.eBassBass_bass,
  "Modeling E.Bass Rick PU Rear Tone": patch.modelingTone.eBassRearTone_bass,
  "Modeling E.Bass Rick PU Front Tone": patch.modelingTone.eBassFrontTone_bass,
  "Modeling E.Bass Rick PU Select": patch.modelingTone.eBassPickupSelect_bass,
  "Modeling E.Bass Active PU Treble": patch.modelingTone.eBassActiveTreble_bass,
  "Modeling E.Bass Active PU Bass": patch.modelingTone.eBassActiveBass_bass,
  "Modeling E.Bass Violin PU Treble on":
    patch.modelingTone.eBassTrebleSwitch_bass,
  "Modeling E.Bass Violin PU Bass on": patch.modelingTone.eBassBassSwitch_bass,
  "Modeling E.Bass Violin PU Rhythm/Solo":
    patch.modelingTone.eBassRhythmSoloSwitch_bass,

  "Modeling SYNTH Analog Tone Mode": patch.modelingTone.gr300Mode_bass,
  "Modeling SYNTH Analog Tone Comp": patch.modelingTone.gr300Comp_bass,
  "Modeling SYNTH Analog Tone Filter Cutoff":
    patch.modelingTone.gr300Cutoff_bass,
  "Modeling SYNTH Analog Tone Filter Reso":
    patch.modelingTone.gr300Resonance_bass,
  "Modeling SYNTH Analog ENV MOD Sw": patch.modelingTone.gr300EnvModSwitch_bass,
  "Modeling SYNTH Analog ENV MOD Sens": patch.modelingTone.gr300EnvModSens_bass,
  "Modeling SYNTH Analog ENV MOD Attack":
    patch.modelingTone.gr300EnvModAttack_bass,
  "Modeling SYNTH Analog Pitch Sw": patch.modelingTone.gr300PitchSwitch_bass,
  "Modeling SYNTH Analog Pitch A": patch.modelingTone.gr300PitchA_bass,
  "Modeling SYNTH Analog Pitch A Fine": patch.modelingTone.gr300PitchAFine_bass,
  "Modeling SYNTH Analog Pitch B": patch.modelingTone.gr300PitchB_bass,
  "Modeling SYNTH Analog Pitch B Fine": patch.modelingTone.gr300PitchBFine_bass,
  "Modeling SYNTH Analog Pitch Duet": patch.modelingTone.gr300PitchDuet_bass,
  "Modeling SYNTH Analog Pitch Sweep Sw":
    patch.modelingTone.gr300SweepSwitch_bass,
  "Modeling SYNTH Analog Pitch Sweep Rise":
    patch.modelingTone.gr300SweepRise_bass,
  "Modeling SYNTH Analog Pitch Sweep Fall":
    patch.modelingTone.gr300SweepFall_bass,
  "Modeling SYNTH Analog Vibrato Sw":
    patch.modelingTone.gr300VibratoSwitch_bass,
  "Modeling SYNTH Analog Vibrato Rate":
    patch.modelingTone.gr300VibratoRate_bass,
  "Modeling SYNTH Analog Vibrato Depth":
    patch.modelingTone.gr300VibratoDepth_bass,

  "Modeling SYNTH Wave Synth Type": patch.modelingTone.waveSynthType_bass,
  "Modeling SYNTH Wave Synth Color": patch.modelingTone.waveSynthColor_bass,

  "Modeling SYNTH Filter Bass Filter Cutoff":
    patch.modelingTone.filterBassCutoff_bass,
  "Modeling SYNTH Filter Bass Filter Reso":
    patch.modelingTone.filterBassResonance_bass,
  "Modeling SYNTH Filter Bass Filter Decay":
    patch.modelingTone.filterBassFilterDecay_bass,
  "Modeling SYNTH Filter Bass Touch Sens":
    patch.modelingTone.filterBassTouchSens_bass,
  "Modeling SYNTH Filter Bass Color": patch.modelingTone.filterBassColor_bass,

  "Modeling SYNTH Crystal Attack Length":
    patch.modelingTone.crystalAttackLength_bass,
  "Modeling SYNTH Crystal MOD Tune": patch.modelingTone.crystalModTune_bass,
  "Modeling SYNTH Crystal MOD Depth": patch.modelingTone.crystalModDepth_bass,
  "Modeling SYNTH Crystal  Attack Level":
    patch.modelingTone.crystalAttackLevel_bass,
  "Modeling SYNTH Crystal Body Level": patch.modelingTone.crystalBody_bass,
  "Modeling SYNTH Crystal Sustain": patch.modelingTone.crystalSustain_bass,

  "Modeling SYNTH Organ Feet 16": patch.modelingTone.organFeet16_bass,
  "Modeling SYNTH Organ Feet 8": patch.modelingTone.organFeet8_bass,
  "Modeling SYNTH Organ Feet 4": patch.modelingTone.organFeet4_bass,
  "Modeling SYNTH Organ Sustain": patch.modelingTone.organSustain_bass,

  "Modeling SYNTH Brass Filter Cutoff": patch.modelingTone.brassCutoff_bass,
  "Modeling SYNTH Brass Filter Reso": patch.modelingTone.brassResonance_bass,
  "Modeling SYNTH Brass Touch Sens": patch.modelingTone.brassTouchSens_bass,
  "Modeling SYNTH Brass Sustain": patch.modelingTone.brassSustain_bass,

  "Modeling Line Select": patch.common.lineSelectModel,

  // TODO: How to handle assign targets that aren't patch fields?
  // (Assuming that's what this is. Ask gumtown)
  "Modeling Tone Bend": null,

  "AMP Switch": patch.ampModNs.ampSwitch,
  "AMP Gain": patch.ampModNs.ampGain,
  "AMP Level": patch.ampModNs.ampLevel,
  "AMP Gain Switch": patch.ampModNs.ampGainSwitch,
  "AMP SOLO Switch": patch.ampModNs.ampSoloSwitch,
  "AMP SOLO Level": patch.ampModNs.ampSoloLevel,
  "AMP Tone Bass": patch.ampModNs.ampBass,
  "AMP Tone Middle": patch.ampModNs.ampMiddle,
  "AMP Tone Treble": patch.ampModNs.ampTreble,
  "AMP Tone Presence": patch.ampModNs.ampPresence,
  "AMP Tone Bright": patch.ampModNs.ampBright,
  "AMP Speaker Type": patch.ampModNs.ampSpType,
  "AMP Spkr Mic Type": patch.ampModNs.ampMicType,
  "AMP Spkr Mic Distance": patch.ampModNs.ampMicDistance,
  "AMP Spkr Mic Position": patch.ampModNs.ampMicPosition,
  "AMP Spkr Mic Level": patch.ampModNs.ampMicLevel,

  "MOD Effect Switch": patch.ampModNs.modSwitch,
  "MOD Pan": patch.ampModNs.modPan,

  "MOD OD/DS Type": patch.ampModNs.odDsType,
  "MOD OD/DS Drive": patch.ampModNs.odDsDrive,
  "MOD OD/DS Tone": patch.ampModNs.odDsTone,
  "MOD OD/DS Level": patch.ampModNs.odDsLevel,

  "MOD WAH Mode": patch.ampModNs.wahMode,
  "MOD WAH Type": patch.ampModNs.wahType,
  "MOD WAH Pedal Position": patch.ampModNs.wahPedalPosition,
  "MOD WAH Sense": patch.ampModNs.wahSens,
  "MOD WAH Frequency": patch.ampModNs.wahFreq,
  "MOD WAH Peak": patch.ampModNs.wahPeak,
  "MOD WAH Level": patch.ampModNs.wahLevel,

  "MOD COMP Sustain": patch.ampModNs.compSustain,
  "MOD COMP Attack": patch.ampModNs.compAttack,
  "MOD COMP Level": patch.ampModNs.compLevel,

  "MOD LIMITER Threshold": patch.ampModNs.limiterThreshold,
  "MOD LIMITER Release": patch.ampModNs.limiterRelease,
  "MOD LIMITER Level": patch.ampModNs.limiterLevel,

  "MOD OCTAVE Effect": patch.ampModNs.octaveOctLevel,
  "MOD OCTAVE Direct": patch.ampModNs.octaveDryLevel,

  "MOD PHASER Type": patch.ampModNs.phaserType,
  "MOD PHASER Rate": patch.ampModNs.phaserRate,
  "MOD PHASER Depth": patch.ampModNs.phaserDepth,
  "MOD PHASER Resonance": patch.ampModNs.phaserResonance,
  "MOD PHASER Level": patch.ampModNs.phaserLevel,

  "MOD FLANGER Rate": patch.ampModNs.flangerRate,
  "MOD FLANGER Depth": patch.ampModNs.flangerDepth,
  "MOD FLANGER Manual": patch.ampModNs.flangerManual,
  "MOD FLANGER Resonance": patch.ampModNs.flangerResonance,
  "MOD FLANGER Level": patch.ampModNs.flangerLevel,

  "MOD TREMOLO Rate": patch.ampModNs.tremoloRate,
  "MOD TREMOLO Depth": patch.ampModNs.tremoloDepth,
  "MOD TREMOLO Wave Shape": patch.ampModNs.tremoloWaveShape,
  "MOD TREMOLO Level": patch.ampModNs.tremoloLevel,

  "MOD ROTARY Rate Slow": patch.ampModNs.rotaryRateSlow,
  "MOD ROTARY Rate Fast": patch.ampModNs.rotaryRateFast,
  "MOD ROTARY Depth": patch.ampModNs.rotaryDepth,
  "MOD ROTARY Speed Select": patch.ampModNs.rotarySelect,
  "MOD ROTARY Level": patch.ampModNs.rotaryLevel,

  "MOD UNI-V Rate": patch.ampModNs.uniVRate,
  "MOD UNI-V Depth": patch.ampModNs.uniVDepth,
  "MOD UNI-V Level": patch.ampModNs.uniVLevel,

  "MOD PAN Rate": patch.ampModNs.panRate,
  "MOD PAN Depth": patch.ampModNs.panDepth,
  "MOD PAN Wave Shape": patch.ampModNs.panWaveShape,
  "MOD PAN Level": patch.ampModNs.panLevel,

  "MOD DELAY Type": patch.ampModNs.delayType,
  "MOD DELAY Time": patch.ampModNs.delayTime,
  "MOD DELAY Feedback": patch.ampModNs.delayFeedback,
  "MOD DELAY Effect level": patch.ampModNs.delayEffectLevel,

  "MOD CHORUS Type": patch.ampModNs.chorusType,
  "MOD CHORUS Rate": patch.ampModNs.chorusRate,
  "MOD CHORUS Depth": patch.ampModNs.chorusDepth,
  "MOD CHORUS Effect Level": patch.ampModNs.chorusEffectLevel,

  "MOD EQ Low Cut": patch.ampModNs.eqLowCutoffFreq,
  "MOD EQ Low Gain": patch.ampModNs.eqLowGain,
  "MOD EQ Low-Mid Frequency": patch.ampModNs.eqLowMidCutoffFreq,
  "MOD EQ Low-Mid Q": patch.ampModNs.eqLowMidQ,
  "MOD EQ Low-Mid Gain": patch.ampModNs.eqLowMidGain,
  "MOD EQ High-Mid Frequency": patch.ampModNs.eqHighMidCutoffFreq,
  "MOD EQ High-Mid Q": patch.ampModNs.eqHighMidQ,
  "MOD EQ High-Mid Gain": patch.ampModNs.eqHighMidGain,
  "MOD EQ High Gain": patch.ampModNs.eqHighGain,
  "MOD EQ High Cut": patch.ampModNs.eqHighCutoffFreq,
  "MOD EQ Level": patch.ampModNs.eqLevel,

  "MOD NS Switch": patch.ampModNs.nsSwitch,
  "MOD NS Threshold": patch.ampModNs.nsThreshold,
  "MOD NS Release": patch.ampModNs.nsReleaseTime,

  "MFX Effect Switch": patch.mfx.mfxSwitch,
  "MFX Pan": patch.mfx.mfxPan,

  "MFX EQ Low Frequency": patch.mfx.eqLowFreq,
  "MFX EQ Low Gain": patch.mfx.eqLowGain,
  "MFX EQ Mid 1 Frequency": patch.mfx.eqMid1Freq,
  "MFX EQ Mid 1 Gain": patch.mfx.eqMid1Gain,
  "MFX EQ Mid 1 Q": patch.mfx.eqMid1Q,
  "MFX EQ Mid 2 Frequency": patch.mfx.eqMid2Freq,
  "MFX EQ Mid 2 Gain": patch.mfx.eqMid2Gain,
  "MFX EQ Mid 2 Q": patch.mfx.eqMid2Q,
  "MFX EQ High Frequency": patch.mfx.eqHighFreq,
  "MFX EQ High Gain": patch.mfx.eqHighGain,
  "MFX EQ Level": patch.mfx.eqLevel,

  "MFX FILTER Type": patch.mfx.superFilterFilterType,
  "MFX FILTER Slope": patch.mfx.superFilterFilterSlope,
  "MFX FILTER Cutoff": patch.mfx.superFilterFilterCutoff,
  "MFX FILTER Resonance": patch.mfx.superFilterFilterResonance,
  "MFX FILTER Gain": patch.mfx.superFilterFilterGain,
  "MFX FILTER Modulation Sw": patch.mfx.superFilterModulationSw,
  "MFX FILTER Modulation Wave": patch.mfx.superFilterModulationWave,
  "MFX FILTER Rate": patch.mfx.superFilterRate,
  "MFX FILTER Depth": patch.mfx.superFilterDepth,
  "MFX FILTER Attack": patch.mfx.superFilterAttack,
  "MFX FILTER Level": patch.mfx.superFilterLevel,

  "MFX PHASER Mode": patch.mfx.phaserMode,
  "MFX PHASER Manual": patch.mfx.phaserManual,
  "MFX PHASER Rate": patch.mfx.phaserRate,
  "MFX PHASER Depth": patch.mfx.phaserDepth,
  "MFX PHASER Polarity": patch.mfx.phaserPolarity,
  "MFX PHASER Resonance": patch.mfx.phaserResonance,
  "MFX PHASER Cross Feedback": patch.mfx.phaserCrossFeedback,
  "MFX PHASER Mix": patch.mfx.phaserMix,
  "MFX PHASER Low Gain": patch.mfx.phaserLowGain,
  "MFX PHASER High Gain": patch.mfx.phaserHighGain,
  "MFX PHASER Level": patch.mfx.phaserLevel,

  "MFX STEP PHASER Mode": patch.mfx.stepPhaserMode,
  "MFX STEP PHASER Manual": patch.mfx.stepPhaserManual,
  "MFX STEP PHASER Rate": patch.mfx.stepPhaserRate,
  "MFX STEP PHASER Depth": patch.mfx.stepPhaserDepth,
  "MFX STEP PHASER Polarity": patch.mfx.stepPhaserPolarity,
  "MFX STEP PHASER Resonance": patch.mfx.stepPhaserResonance,
  "MFX STEP PHASER Cross Feedback": patch.mfx.stepPhaserCrossFeedback,
  "MFX STEP PHASER Step rate": patch.mfx.stepPhaserStepRate,
  "MFX STEP PHASER Mix": patch.mfx.stepPhaserMix,
  "MFX STEP PHASER Low Gain": patch.mfx.stepPhaserLowGain,
  "MFX STEP PHASER High Gain": patch.mfx.stepPhaserHighGain,
  "MFX STEP PHASER Level": patch.mfx.stepPhaserLevel,

  "MFX RING MOD Frequency": patch.mfx.ringModulatorFrequency,
  "MFX RING MOD Sense": patch.mfx.ringModulatorSens,
  "MFX RING MOD Polarity": patch.mfx.ringModulatorPolarity,
  "MFX RING MOD Low Gain": patch.mfx.ringModulatorLowGain,
  "MFX RING MOD High Gain": patch.mfx.ringModulatorHighGain,
  "MFX RING MOD Balance": patch.mfx.ringModulatorBalance,
  "MFX RING MOD Level": patch.mfx.ringModulatorLevel,

  "MFX TREMOLO Mod Wave": patch.mfx.tremoloModWave,
  "MFX TREMOLO Rate": patch.mfx.tremoloRate,
  "MFX TREMOLO Depth": patch.mfx.tremoloDepth,
  "MFX TREMOLO Low Gain": patch.mfx.tremoloLowGain,
  "MFX TREMOLO High Gain": patch.mfx.tremoloHighGain,
  "MFX TREMOLO Level": patch.mfx.tremoloLevel,

  "MFX AUTO PAN Mod Wave": patch.mfx.autoPanModWave,
  "MFX AUTO PAN Rate": patch.mfx.autoPanRate,
  "MFX AUTO PAN Depth": patch.mfx.autoPanDepth,
  "MFX AUTO PAN Low Gain": patch.mfx.autoPanLowGain,
  "MFX AUTO PAN High Gain": patch.mfx.autoPanHighGain,
  "MFX AUTO PAN Level": patch.mfx.autoPanLevel,

  "MFX SLICER Pattern": patch.mfx.slicerPattern,
  "MFX SLICER SLICER Rate": patch.mfx.slicerRate,
  "MFX SLICER Attack": patch.mfx.slicerAttack,
  "MFX SLICER Input Sync Sw": patch.mfx.slicerInputSyncSw,
  "MFX SLICER Input Sync Threshold": patch.mfx.slicerInputSyncThreshold,
  "MFX SLICER Level": patch.mfx.slicerLevel,

  "MFX VK ROTARY Speed": patch.mfx.vkRotarySpeed,
  "MFX VK ROTARY Brake": patch.mfx.vkRotaryBrake,
  "MFX VK ROTARY Woofer Slow Speed": patch.mfx.vkRotaryWooferSlowSpeed,
  "MFX VK ROTARY Woofer Fast Speed": patch.mfx.vkRotaryWooferFastSpeed,
  "MFX VK ROTARY Woofer Trans Up": patch.mfx.vkRotaryWooferTransUp,
  "MFX VK ROTARY Woofer Trans Down": patch.mfx.vkRotaryWooferTransDown,
  "MFX VK ROTARY Woofer Level": patch.mfx.vkRotaryWooferLevel,
  "MFX VK ROTARY Tweeter Slow Speed": patch.mfx.vkRotaryTweeterSlowSpeed,
  "MFX VK ROTARY Tweeter Fast Speed": patch.mfx.vkRotaryTweeterFastSpeed,
  "MFX VK ROTARY Tweeter Trans Up": patch.mfx.vkRotaryTweeterTransUp,
  "MFX VK ROTARY Tweeter Trans Down": patch.mfx.vkRotaryTweeterTransDown,
  "MFX VK ROTARY Tweeter Level": patch.mfx.vkRotaryTweeterLevel,
  "MFX VK ROTARY Spread": patch.mfx.vkRotarySpread,
  "MFX VK ROTARY Low Gain": patch.mfx.vkRotaryLowGain,
  "MFX VK ROTARY High Gain": patch.mfx.vkRotaryHighGain,
  "MFX VK ROTARY Level": patch.mfx.vkRotaryLevel,

  "MFX HEXA-CHORUS Pre Delay": patch.mfx.hexaChorusPreDelay,
  "MFX HEXA-CHORUS Rate": patch.mfx.hexaChorusRate,
  "MFX HEXA-CHORUS Depth": patch.mfx.hexaChorusDepth,
  "MFX HEXA-CHORUS Pre Dly Deviation": patch.mfx.hexaChorusPreDelayDeviation,
  "MFX HEXA-CHORUS Depth Deviation": patch.mfx.hexaChorusDepthDeviation,
  "MFX HEXA-CHORUS Pan Deviation": patch.mfx.hexaChorusPanDeviation,
  "MFX HEXA-CHORUS Balance": patch.mfx.hexaChorusBalance,
  "MFX HEXA-CHORUS Level": patch.mfx.hexaChorusLevel,

  "MFX SPACE-D Pre Delay": patch.mfx.spaceDPreDelay,
  "MFX SPACE-D Rate": patch.mfx.spaceDRate,
  "MFX SPACE-D Depth": patch.mfx.spaceDDepth,
  "MFX SPACE-D Phase": patch.mfx.spaceDPhase,
  "MFX SPACE-D Low Gain": patch.mfx.spaceDLowGain,
  "MFX SPACE-D High Gain": patch.mfx.spaceDHighGain,
  "MFX SPACE-D Balance": patch.mfx.spaceDBalance,
  "MFX SPACE-D Level": patch.mfx.spaceDLevel,

  "MFX FLANGER Filter Type": patch.mfx.flangerFilterType,
  "MFX FLANGER Cutoff Frequency": patch.mfx.flangerCutoffFreq,
  "MFX FLANGER Pre Delay": patch.mfx.flangerPreDelay,
  "MFX FLANGER Rate": patch.mfx.flangerRate,
  "MFX FLANGER Depth": patch.mfx.flangerDepth,
  "MFX FLANGER Phase": patch.mfx.flangerPhase,
  "MFX FLANGER Feedback": patch.mfx.flangerFeedback,
  "MFX FLANGER Low Gain": patch.mfx.flangerLowGain,
  "MFX FLANGER High Gain": patch.mfx.flangerHighGain,
  "MFX FLANGER Balance": patch.mfx.flangerBalance,
  "MFX FLANGER Level": patch.mfx.flangerLevel,

  "MFX STEP-FLANGER Filter Type": patch.mfx.stepFlangerFilterType,
  "MFX STEP-FLANGER Cutoff Frequency": patch.mfx.stepFlangerCutoffFreq,
  "MFX STEP-FLANGER Pre Delay": patch.mfx.stepFlangerPreDelay,
  "MFX STEP-FLANGER Rate": patch.mfx.stepFlangerRate,
  "MFX STEP-FLANGER Depth": patch.mfx.stepFlangerDepth,
  "MFX STEP-FLANGER Phase": patch.mfx.stepFlangerPhase,
  "MFX STEP-FLANGER Feedback": patch.mfx.stepFlangerFeedback,
  "MFX STEP-FLANGER Step Rate": patch.mfx.stepFlangerStepRate,
  "MFX STEP-FLANGER Low Gain": patch.mfx.stepFlangerLowGain,
  "MFX STEP-FLANGER High Gain": patch.mfx.stepFlangerHighGain,
  "MFX STEP-FLANGER Balance": patch.mfx.stepFlangerBalance,
  "MFX STEP-FLANGER Level": patch.mfx.stepFlangerLevel,

  "MFX AMP-SIM PreAmp Sw": patch.mfx.gtrAmpSimPreAmpSw,
  "MFX AMP-SIM PreAmp Type": patch.mfx.gtrAmpSimPreAmpType,
  "MFX AMP-SIM PreAmp Volume": patch.mfx.gtrAmpSimPreAmpVolume,
  "MFX AMP-SIM PreAmp Master": patch.mfx.gtrAmpSimPreAmpMaster,
  "MFX AMP-SIM PreAmp Gain": patch.mfx.gtrAmpSimPreAmpGain,
  "MFX AMP-SIM PreAmp Bass": patch.mfx.gtrAmpSimPreAmpBass,
  "MFX AMP-SIM PreAmp Middle": patch.mfx.gtrAmpSimPreAmpMiddle,
  "MFX AMP-SIM PreAmp Treble": patch.mfx.gtrAmpSimPreAmpTreble,
  "MFX AMP-SIM PreAmp Presence": patch.mfx.gtrAmpSimPreAmpPresence,
  "MFX AMP-SIM PreAmp Bright": patch.mfx.gtrAmpSimPreAmpBright,
  "MFX AMP-SIM Speaker Sw": patch.mfx.gtrAmpSimSpeakerSw,
  "MFX AMP-SIM Speaker Type": patch.mfx.gtrAmpSimSpeakerType,
  "MFX AMP-SIM Speaker Mic Setting": patch.mfx.gtrAmpSimMicSetting,
  "MFX AMP-SIM Speaker Mic Level": patch.mfx.gtrAmpSimMicLevel,
  "MFX AMP-SIM Speaker Direct Level": patch.mfx.gtrAmpSimDirectLevel,
  "MFX AMP-SIM Pan": patch.mfx.gtrAmpSimPan,
  "MFX AMP-SIM Level": patch.mfx.gtrAmpSimLevel,

  "MFX COMPRESSOR Attack": patch.mfx.compressorAttack,
  "MFX COMPRESSOR Threshold": patch.mfx.compressorThreshold,
  "MFX COMPRESSOR Post Gain": patch.mfx.compressorPostGain,
  "MFX COMPRESSOR Low Gain": patch.mfx.compressorLowGain,
  "MFX COMPRESSOR High Gain": patch.mfx.compressorHighGain,
  "MFX COMPRESSOR Level": patch.mfx.compressorLevel,

  "MFX LIMITER Release": patch.mfx.limiterRelease,
  "MFX LIMITER Threshold": patch.mfx.limiterThreshold,
  "MFX LIMITER Ratio": patch.mfx.limiterRatio,
  "MFX LIMITER Post Gain": patch.mfx.limiterPostGain,
  "MFX LIMITER Low Gain": patch.mfx.limiterLowGain,
  "MFX LIMITER High Gain": patch.mfx.limiterHighGain,
  "MFX LIMITER Level": patch.mfx.limiterLevel,

  // TODO: Figure out the relationship between this and the tempo-based field(s).
  // On the GR-55 it looks like only the time-based field is assignable.
  // TODO: The field's representation differs from the assign min/max field's apparent representation.
  "MFX 3TAP DELAY Delay Left": patch.mfx.threeTapDelayDelayLeft,
  "MFX 3TAP DELAY Delay Right": patch.mfx.threeTapDelayDelayRight,
  "MFX 3TAP DELAY Delay Center": patch.mfx.threeTapDelayDelayCenter,
  "MFX 3TAP DELAY Center Feedback": patch.mfx.threeTapDelayCenterFeedback,
  "MFX 3TAP DELAY HF Damp": patch.mfx.threeTapDelayHFDamp,
  "MFX 3TAP DELAY Left Level": patch.mfx.threeTapDelayLeftLevel,
  "MFX 3TAP DELAY Right Level": patch.mfx.threeTapDelayRightLevel,
  "MFX 3TAP DELAY Center Level": patch.mfx.threeTapDelayCenterLevel,
  "MFX 3TAP DELAY Low Gain": patch.mfx.threeTapDelayLowGain,
  "MFX 3TAP DELAY High Gain": patch.mfx.threeTapDelayHighGain,
  "MFX 3TAP DELAY Balance": patch.mfx.threeTapDelayBalance,
  "MFX 3TAP DELAY Level": patch.mfx.threeTapDelayLevel,

  // TODO: Figure out the relationship between this and the tempo-based field(s).
  // On the GR-55 it looks like only the time-based field is assignable.
  // TODO: The field's representation differs from the assign min/max field's apparent representation.
  "MFX TIME DELAY Delay Time": patch.mfx.timeCtrlDelayDelayTime,
  "MFX TIME DELAY Acceleration": patch.mfx.timeCtrlDelayAcceleration,
  "MFX TIME DELAY Feedback": patch.mfx.timeCtrlDelayFeedback,
  "MFX TIME DELAY HF Damp": patch.mfx.timeCtrlDelayHFDamp,
  "MFX TIME DELAY Low Gain": patch.mfx.timeCtrlDelayLowGain,
  "MFX TIME DELAY High Gain": patch.mfx.timeCtrlDelayHighGain,
  "MFX TIME DELAY Balance": patch.mfx.timeCtrlDelayBalance,
  "MFX TIME DELAY Level": patch.mfx.timeCtrlDelayLevel,

  "MFX LOFI COMP Pre Filter Type": patch.mfx.lofiCompressPreFilterType,
  "MFX LOFI COMP LoFi Type": patch.mfx.lofiCompressLoFiType,
  "MFX LOFI COMP Post Filter Type": patch.mfx.lofiCompressPostFilterType,
  "MFX LOFI COMP Post Filter Cutoff": patch.mfx.lofiCompressPostFilterCutoff,
  "MFX LOFI COMP Low Gain": patch.mfx.lofiCompressLowGain,
  "MFX LOFI COMP High Gain": patch.mfx.lofiCompressHighGain,
  "MFX LOFI COMP Balance": patch.mfx.lofiCompressBalance,
  "MFX LOFI COMP Level": patch.mfx.lofiCompressLevel,

  "MFX PITCH-SHIFTER Coarse": patch.mfx.pitchShifterCoarse,
  "MFX PITCH-SHIFTER Fine": patch.mfx.pitchShifterFine,
  // TODO: Figure out the relationship between this and the tempo-based field(s).
  // On the GR-55 it looks like only the time-based field is assignable.
  // TODO: The field's representation differs from the assign min/max field's apparent representation.
  "MFX PITCH-SHIFTER Delay Time": patch.mfx.pitchShifterDelayTime,
  "MFX PITCH-SHIFTER Feedback": patch.mfx.pitchShifterFeedback,
  "MFX PITCH-SHIFTER Low Gain": patch.mfx.pitchShifterLowGain,
  "MFX PITCH-SHIFTER High Gain": patch.mfx.pitchShifterHighGain,
  "MFX PITCH-SHIFTER Balance": patch.mfx.pitchShifterBalance,
  "MFX PITCH-SHIFTER Level": patch.mfx.pitchShifterLevel,

  "DELAY Effect Switch": patch.sendsAndEq.delaySwitch,
  "DELAY Type": patch.sendsAndEq.delayType,
  "DELAY Time": patch.sendsAndEq.delayTime,
  "DELAY Feedback": patch.sendsAndEq.delayFeedback,
  "DELAY Effect Level": patch.sendsAndEq.delayEffectLevel,
  "DELAY MFX Send": patch.mfx.mfxDelaySendLevel,
  "DELAY MOD Send": patch.ampModNs.modDelaySendLevel,
  "DELAY BYPASS Send": patch.common.bypassDelaySendLevel,

  "REVERB Effect Switch": patch.sendsAndEq.reverbSwitch,
  "REVERB Type": patch.sendsAndEq.reverbTime,
  "REVERB Time": patch.sendsAndEq.reverbTime,
  "REVERB High Cut": patch.sendsAndEq.reverbHighCut,
  "REVERB Effect Level": patch.sendsAndEq.reverbEffectLevel,
  "REVERB MFX Send": patch.mfx.mfxReverbSendLevel,
  "REVERB MOD Send": patch.ampModNs.modReverbSendLevel,
  "REVERB BYPASS Send": patch.common.bypassReverbSendLevel,

  "CHORUS Effect Switch": patch.sendsAndEq.chorusSwitch,
  "CHORUS Type": patch.sendsAndEq.chorusType,
  "CHORUS Rate": patch.sendsAndEq.chorusRate,
  "CHORUS Depth": patch.sendsAndEq.chorusDepth,
  "CHORUS Effect Level": patch.sendsAndEq.chorusEffectLevel,
  "CHORUS MFX Send": patch.mfx.mfxChorusSendLevel,
  "CHORUS MOD Send": patch.ampModNs.modChorusSendLevel,
  "CHORUS BYPASS Send": patch.common.bypassChorusSendLevel,

  "EQ Effect Switch": patch.sendsAndEq.eqSwitch,
  "EQ Low Cut": patch.sendsAndEq.eqLowCutoffFreq,
  "EQ Low Gain": patch.sendsAndEq.eqLowGain,
  "EQ Low-Mid Frequency": patch.sendsAndEq.eqLowMidCutoffFreq,
  "EQ Low-Mid Q": patch.sendsAndEq.eqLowMidQ,
  "EQ Low-Mid Gain": patch.sendsAndEq.eqLowMidGain,
  "EQ High-Mid Frequency": patch.sendsAndEq.eqHighMidCutoffFreq,
  "EQ High-Mid Q": patch.sendsAndEq.eqHighMidQ,
  "EQ High-Mid Gain": patch.sendsAndEq.eqHighMidGain,
  "EQ High Gain": patch.sendsAndEq.eqHighGain,
  "EQ High Cut": patch.sendsAndEq.eqHighCutoffFreq,
  "EQ Level": patch.sendsAndEq.eqLevel,
  "EQ Character": patch.sendsAndEq.ezCharacter,

  "NORMAL PICKUP Level": patch.common.normalPuLevel,
  "NORMAL PICKUP Line Select": patch.common.lineSelectNormalPU,
  "ALTERNATE TUNING Switch": patch.common.altTuneSwitch,
  "PATCH TEMPO": patch.common.patchTempo,
  "GUITAR OUT SOURCE": patch.common.guitarOutSource,
  "PATCH LEVEL": patch.common.patchLevel,
};

// TODO: Build reverse index from the above, and use it for quick navigation, showing which fields are assigned, etc.
